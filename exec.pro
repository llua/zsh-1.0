void execstring(char *s);
void newrunlist(list l);
int phork(void);
void execcursh(comm comm);
void execute(char *arg0,table args);
char *findcmd(char *arg0);
void execlist(list list);
void execlist1(list list);
void execlist2(list2 list,int type,int last1);
int execpline(list2 l,int how,int last1);
void execpline2(pline pline,int how,int input,int output,int last1);
char **makecline(char *nam,struct xlist *list);
void fixcline(table l);
void untokenize(char *s);
void addenv(table list);
int dontclob(struct fnode *f);
void closemn(struct mnode *mfds[10],int fd);
void closemnodes(struct mnode *mfds[10]);
void addfd(int forked,int save[10],struct mnode *mfds[10],int fd1,int fd2,int rflag);
void execcomm(comm comm,int input,int output,int bkg,int last1);
void fixfds(int save[10]);
void entersubsh(int bkg);
void closem(void);
int gethere(char *str);
void catproc(struct mnode *mn);
void teeproc(struct mnode *mn);
void closeallelse(struct mnode *mn);
long int zstrtol(const char *s,char **t,int base);
table getoutput(char *cmd,int qt);
table readoutput(int in,int qt);
char *getoutputfile(char *cmd);
char *namedpipe(void);
char *getoutproc(char *cmd);
char *getinproc(char *cmd);
int getinpipe(char *cmd);
int getoutpipe(char *cmd);
void runlist(list l);
char *gettemp(void);
char *zgetwd(void);
void mpipe(int pp[2]);
void spawnpipes(table l);
